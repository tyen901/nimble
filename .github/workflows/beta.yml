name: Beta Release

on:
  push:
    branches:
      - 'release/beta*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Work around spurious network errors
        run: |
          if rustc +stable --version --verbose | grep -q '^release: 1\.7[01]\.'; then
            echo CARGO_HTTP_MULTIPLEXING=false >> $GITHUB_ENV
          fi

      - name: Cache cargo registry
        uses: actions/cache@v3 
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Release
        shell: bash
        run: |
          set -eo pipefail
          cargo build --release --bins

      - name: Prepare artifacts 
        shell: bash
        run: |
          set -eo pipefail
          mkdir -p dist
          find target/release -maxdepth 1 -type f \( -name "nimble" -o -name "nimble-gui" -o -name "nimble.exe" -o -name "nimble-gui.exe" \) -exec cp {} dist/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: beta-artifacts
          path: dist/*
          
      - name: Create Beta Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "beta-${GITHUB_SHA::8}" \
            --title "Beta Release ${GITHUB_SHA::8}" \
            --prerelease \
            --notes "Automated beta release from ${GITHUB_REF#refs/heads/}" \
            dist/*
